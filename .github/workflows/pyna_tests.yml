name: pyNA

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
        PYOPTSPARSE: ["v2.9.2"]

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pyNA & dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -e .
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Install pyOptSparse
        if: matrix.PYOPTSPARSE
        run: |
          echo "============================================================="
          echo "Install pyoptsparse"
          echo "============================================================="
          if [[ "${{ matrix.PYOPTSPARSE }}" == "conda-forge" ]]; then
            if [[ "${{ matrix.SNOPT }}" ]]; then
              echo "SNOPT ${{ matrix.SNOPT }} was requested but is not available on conda-forge"
            fi
            conda install -c conda-forge pyoptsparse
          else
            python -m pip install git+https://github.com/OpenMDAO/build_pyoptsparse
            if [[ "${{ matrix.PYOPTSPARSE }}" == "latest" ]]; then
              function latest_version() {
                local REPO_URL=$1/releases/latest
                local LATEST_URL=`curl -fsSLI -o /dev/null -w %{url_effective} $REPO_URL`
                local LATEST_VER=`echo $LATEST_URL | awk '{split($0,a,"/tag/"); print a[2]}'`
                echo $LATEST_VER
              }
              BRANCH="-b $(latest_version https://github.com/mdolab/pyoptsparse)"
            else
              BRANCH="-b ${{ matrix.PYOPTSPARSE }}"
            fi
            if [[ "${{ matrix.PAROPT }}" ]]; then
              PAROPT="-a"
            fi
            if [[ "${{ matrix.SNOPT }}" == "7.7" && "${{ secrets.SNOPT_LOCATION_77 }}" ]]; then
              echo "  > Secure copying SNOPT 7.7 over SSH"
              mkdir SNOPT
              scp -qr ${{ secrets.SNOPT_LOCATION_77 }} SNOPT
              SNOPT="-s SNOPT/src"
            elif [[ "${{ matrix.SNOPT }}" == "7.2" && "${{ secrets.SNOPT_LOCATION_72 }}" ]]; then
              echo "  > Secure copying SNOPT 7.2 over SSH"
              mkdir SNOPT
              scp -qr ${{ secrets.SNOPT_LOCATION_72 }} SNOPT
              SNOPT="-s SNOPT/source"
            elif [[ "${{ matrix.SNOPT }}" ]]; then
              echo "SNOPT version ${{ matrix.SNOPT }} was requested but source is not available"
            fi
            build_pyoptsparse $BRANCH $PAROPT $SNOPT
          fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          pytest