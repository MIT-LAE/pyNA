using BenchmarkTools
using Test
using CSV
using DataFrames

include("../../src/noise_src_jl/atmospheric_absorption.jl")
include("../../src/noise_src_jl/interpolation_functions.jl")

struct Settings_abs
	N_f
	N_b
	r_0
end
settings = Settings_abs(24, 5, 0.3048)

struct Data_abs
	f_sb
	abs_alt
	abs_freq
	abs
	Faddeeva_itau_re 
	Faddeeva_itau_im
	Faddeeva_real
	Faddeeva_imag
end

l_i = 16
f = 10 .^ (0.1 * range(1+l_i, 40, length=24))
f_sb = zeros(settings.N_b * settings.N_f)
m = (settings.N_b - 1) / 2.
w = 2. ^ (1 / (3. * settings.N_b))
for k in 0:1:settings.N_f-1
    for h in 0:1:settings.N_b-1
        f_sb[k * settings.N_b + h+1] = w ^ (h - m) * f[k+1]
    end
end

data_absorption = DataFrame(CSV.File("../../data/isa/atmospheric_absorption.csv"))
abs_alt = Array(data_absorption)[2:end, 1]
abs_freq = Array(data_absorption)[1, 2:end]
abs = Array(data_absorption)[2:end, 2:end]
data_fadd_real = DataFrame(CSV.File("../../data/propagation/Faddeeva_real_small.csv"))
data_fadd_imag = DataFrame(CSV.File("../../data/propagation/Faddeeva_imag_small.csv"))
Faddeeva_itau_re = Array(data_fadd_real)[1, 2:end]
Faddeeva_itau_im = Array(data_fadd_imag)[2:end, 1]
Faddeeva_real = Array(data_fadd_real)[2:end, 2:end]
Faddeeva_imag = Array(data_fadd_imag)[2:end, 2:end]
data = Data_abs(f_sb, abs_alt, abs_freq, abs, Faddeeva_itau_re,Faddeeva_itau_im,Faddeeva_real,Faddeeva_imag)

struct Pyna_ip
	f_abs
end	
f_abs, _, _ = get_propagation_interpolation_functions(data)
pyna_ip = Pyna_ip(f_abs)


@testset "atmospheric absorption module" begin
	
	## Test 1: example from the nasa stca    
	z = 100.
	r = 5000.
	spl_sb = ones(120,)

	atmospheric_absorption!(spl_sb, pyna_ip, settings, data.f_sb, z, r)
	sol = [0.7412217259454141, 0.7307824447195824, 0.7200070357445673, 0.7088923767555761, 0.6974359540592129, 0.6858409099639843, 0.6737028975338593, 0.6612208436562392, 0.648389860158963, 0.6352188913692822, 0.621945624613759, 0.6081130880121681, 0.5939560522755696, 0.5794729312973105, 0.5646815371975598, 0.5498557022089274, 0.5344924791009921, 0.5188626493047979, 0.5029688835662375, 0.48684512165294824, 0.470793688462469, 0.4542788307438226, 0.43760012113314545, 0.4207696902081772, 0.40383681016265566, 0.38712446999995587, 0.3700840117055737, 0.3530412143628986, 0.3360103424862837, 0.319048382444861, 0.3024884515976646, 0.2857945975539123, 0.26929804754956305, 0.2530121394787246, 0.23700934380299515, 0.2215989024856588, 0.20628555304818147, 0.19137716594307014, 0.17688422572691595, 0.16288105884830295, 0.14962856083647788, 0.1366969724816215, 0.12434689416273062, 0.11257313959910013, 0.10143585654385176, 0.09112502275349976, 0.08129295443483808, 0.07213119017995302, 0.06361011153523803, 0.055759951157646426, 0.048692444309174764, 0.04214719060562582, 0.03623200517888897, 0.03090036763068737, 0.02615565141132893, 0.022032828848446446, 0.018353756319626564, 0.015156804832417152, 0.012387221288674057, 0.010027566982672292, 0.008067866096685661, 0.00639990418408524, 0.0050214734778411315, 0.0038877840840738547, 0.0029728123399328696, 0.0022555744386921965, 0.0016808929831377377, 0.001235329168170768, 0.0008916773834680771, 0.0006337779769300808, 0.00044603767613479197, 0.0003068125728052395, 0.00020716262145282339, 0.00013663330580688615, 8.835947229291368e-5, 5.6424283103368656e-5, 3.4994304197825015e-5, 2.1218595123375143e-5, 1.2473356642241432e-5, 7.136709618733657e-6, 4.0178024541010626e-6, 2.178887490179906e-6, 1.1479221593648684e-6, 5.789206540124239e-7, 2.824514994655553e-7, 1.3497096486513767e-7, 6.146917687774179e-8, 2.691072679866062e-8, 1.1100251243131557e-8, 4.390876475407202e-9, 1.6908386051420052e-9, 6.118857780564291e-10, 2.1037949555034872e-10, 6.64182713943723e-11, 1.9855956420413682e-11, 5.731967519995863e-12, 1.5261133118123176e-12, 3.816709507931327e-13, 1.6839832501307458e-13, 7.697891614146728e-14, 3.4399959923576574e-14, 1.4587115748726006e-14, 5.733040899530468e-15, 1.1034810791648789e-15, 1.9647175050291788e-16, 3.3275562349861866e-17, 5.0204577509948435e-18, 6.825125688201183e-19, 5.414815216295341e-20, 3.810729904236086e-21, 2.4833947121013655e-22, 1.3547875011420006e-23, 6.441038236613911e-25, 1.2421575154401029e-26, 1.7257260343589122e-28, 2.118209500916279e-30, 1.95231553774832e-32, 1.4416762971307696e-34, 2.3597667374941566e-36, 3.179824499047436e-38]
	@test(isapprox(spl_sb, sol, rtol=1e-6))

end

## Test 2: timing
z = 100.
r = 5000.
spl_sb = ones(120,)

@btime atmospheric_absorption!(spl_sb, pyna_ip, settings, data.f_sb, z, r)
